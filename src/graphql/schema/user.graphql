type Usuario {
  id: ID!
  nombre: String!
  apellido: String
  email: String!
  rol: Rol!
  estado: EstadoUsuario!
  empresa: Empresa
  telefono: String
  identificadorTelefono: String
  usuCre: ID
  fechaCre: String
  usuMod: ID
  fechaMod: String
}

type Empresa {
  id: ID!
  nombre: String!
  usuarios: [Usuario!]!
  urlImge: String
}

type CrearAdminResult {
  success: Boolean!
  message: String!
  usuario: Usuario
}

type VerificacionOTPResult {
  success: Boolean!
  message: String!
  usuario: Usuario
}

input ActualizarAdminInput {
  nombre: String
  apellido: String
  email: String
  empresaId: ID
}

type ActualizarAdminResponse {
  success: Boolean!
  message: String!
  usuario: Usuario
}

enum Rol {
  SUPER_ADMIN
  ADMIN
  NORMAL
}

enum EstadoUsuario {
  ACTIVO
  INACTIVO
  PENDIENTE
}

type Token {
  token: String!
  usuario: Usuario!
}

input CrearUsuarioNormalInput {
  nombre: String!
  apellido: String
  email: String!
  password: String!
  telefono: String!
  rol: Rol!
  empresaId: ID
}

input CrearAdminInput {
  nombre: String!
  apellido: String
  email: String!
  password: String!
  telefono: String!
  empresaId: ID
}

input ActualizarUsuarioInput {
  nombre: String
  apellido: String
  email: String
  password: String
  telefono: String
  empresaId: ID
}

input QueryInput {
  telefono: String
  nombre: String
  apellido: String
  correo: String
}

type InvitacionEmpresa {
  id: ID!
  email: String!
  empresa: Empresa!
  estado: EstadoInvitacion!
}

type InvitacionEmpresaResponse {
  success: Boolean!
  message: String!
  invitacion: InvitacionEmpresa
}

enum EstadoInvitacion {
  PENDIENTE
  ACEPTADA
  RECHAZADA
}

type Query {
  obtenerUsuarios(query: QueryInput): [Usuario!]! @auth
  listarUsuarios: [Usuario!]! @auth
  obtenerEmpresa(id: ID!): Empresa @auth
  listarEmpresas: [Empresa!]! @auth
  me: Usuario! @auth
}

type Mutation {
  login(email: String!, password: String!): Token!
  crearUsuarioNormal(input: CrearUsuarioNormalInput!): Usuario! @auth
  crearAdmin(input: CrearAdminInput!): CrearAdminResult!
  verificarOTP(
    nombre: String!
    telefono: String!
    otp: String!
  ): VerificacionOTPResult!
  actualizarUsuario(id: ID!, input: ActualizarUsuarioInput!): Usuario! @auth
  eliminarUsuario(id: ID!): Boolean! @auth
  toggleUsuario(id: ID!): Usuario! @auth
  crearEmpresa(nombre: String!): Empresa! @auth
  actualizarEmpresa(id: ID!, nombre: String!): Empresa! @auth
  eliminarEmpresa(id: ID!): Boolean! @auth
  actualizarAdmin(input: ActualizarAdminInput!): ActualizarAdminResponse! @auth
  invitarUsuarioAEmpresa(email: String!, empresaId: ID!): InvitacionEmpresa!
    @auth
  aceptarInvitacionEmpresa(invitacionId: ID!): InvitacionEmpresaResponse! @auth
}

type Subscription {
  invitacionEmpresaRecibida: InvitacionEmpresa! @auth
}
